# This is a GitHub Actions workflow configuration file. It defines a workflow named "deploy Dist" that will run when there is a push event or when manually triggered using the workflow_dispatch event.
name: Deploy React to github pages
on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

  
jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  test:
        runs-on: ubuntu-latest
        steps:
            - name: "Get Code"
              uses: actions/checkout@v4
            
            - name: Install Node 20
              uses: actions/setup-node@v4
              with:
                node-version: 20
            - name: Cache Dependencies
              uses: actions/cache@v4
              with:
                path: ~/.npm
                key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                
            - name: Install Dependancies
              run: npm ci
            - name: Run Tests
              run: npm run test
  build:
          needs: test
          runs-on: ubuntu-latest
          steps:
            - name: "Get Code"
              uses: actions/checkout@v4
            - name: Install Node 20
              uses: actions/setup-node@v4
              with:
                node-version: 20
            - name: Cache Dependencies
              uses: actions/cache@v4
              with:
                path: ~/.npm
                key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            - name: create dist folder and add a test file
              run: |
                mkdir -p dist
                echo "This is a test file" > dist/index.html
            - name: verify  dist folder 
              run: | 
                ls -al dist
                
            - name: Install Dependencies
              run: npm ci
            - name: Build Project
              run: npm run build
            - name: Upload Disk Artificate
              uses: actions/upload-pages-artifact@v3         #actions/upload-artifact@v4
              with:
                name: github-pages
                path: dist
  deploy:
        runs-on: ubuntu-latest
        permissions:
          pages: write      # to deploy to Pages
          id-token: write   # to verify the deployment originates from an appropriate source

        environment:
          name: github-pages
          url: ${{ steps.deployment.outputs.page_url }}  # This will work if the action provides this output

        steps:
          - name: Deploy to GitHub Pages
            id: deployment  # Fixed typo here
            uses: actions/deploy-pages@v4
            with:
              token: ${{ secrets.GITHUB_TOKEN }}
